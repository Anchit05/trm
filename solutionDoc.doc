1.) User story(Wei to Eth)

Solution:

- First checked the links provided and looked for the conversion from Wei to Eth
- Then checked the documentation of BigNumber.js and found the methods that can useful
- After analysing the component then checked how the addresses data is coming, as in the 
  addresses data the object was coming in array of objects form where object has 'address' and 
  'balance' keys.
- So, thought of formatting the balance key, in the addresses data. For that created a weiToEther
  function which will take care of the conversion. Create a helper file and put that function There
  so that it can be used, anywhere in the project.


  2.) User story(Refactor Saga)

  Solution:

  - First looked for repetition of code and tried to accumulate it in one function
  - Reduced the two api call functions, so that if someone wants to add more functions 
    can do it easily, without thinking of how the whole thing is working behind.
  - Create the apiRequest in a separate file, so that it can used in multiple sagas.

  3.) User story(validating ETH address)

  Solution:
  - Looked into the documentation of the links provide and setup the packages and webpack configs
  - Tested if the function is working correctly or not
  - Then looked into the documentation of ant design on how to put multiple validation on Form input
    and then looked into the solution of how to do it.
  - Created a common isAddressField which can used over the project, to validate any kind of addresses.